@386_linux

MULTIPLY
outputs the product of two single-digit inputs

#0 		input 1
#1 		input 2
#2 		print buffer
#3 		copy dump 1
#4 		copy dump 2
#5 		result
#6 		tens place
#7 		ones place
#10_15	(division)
	:0		dividend
	:1		divisor
	:5		quotient

#0
: get first number (#0;2)
	>> #2
	: print "Input a number: " via print buffer (#2)
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++.
		[-]
	<< #0
	: get number via input 1 (#0) and convert to ascii
		,>,[-]<
		----- -----
		----- -----
		----- -----
		----- -----
		----- --- \48
: get second number (#1_2)
	>> #2
	: print "Input a number: " via print buffer (#2)
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
		[-]++++++++++++++++++++++++++++++++.
		[-]
	< #1
	: get number via input 2 (#1) and convert to ascii
		,>,[-]<
		----- -----
		----- -----
		----- -----
		----- -----
		----- --- \48
	< #0
: multiply (#0;1;3_5)
	: for input 1 (#0) via copy dump 1 (#3) copy input 2 (#1) via copy dump 2 (#4) to result (#5)
		: move input 1 (#0) to copy dump 1 (#3)
			[
			>>>+ #3
			<<<- #0
			]
		: for copy dump 1 (#3) to input 1 (#0) copy input 2 (#1) via copy dump 2 (#4) to result (#5)
			>>> #3
			[
			<<<+ #0
			: copy input 2 (#1) via copy dump 2 (#4) to result (#5)
				> #1
				: move input 2 (#1) to copy dump 2 (#4)
					[
					>>>+ #4
					<<<- #1
					]
				: move copy dump 2 (#4) to input 2 (#1) and result (#5)
					>>> #4
					[
					<<<+ #1
					>>>>+ #5
					<- #4
					]
					<<< #1
				< #0
			>>>- #3
			]
			<<< #0
: output (#2;4_7;10_15)
	>>>>> #5
	: divide result (#5) by 10 via division algorithm (#10_15) and copy dump 2 (#4) to tens place (#6)
		: copy result (#5) to division:0 (#10)
			: move result (#5) to copy dump 2 (#4)
				[
				<+ #4
				>- #5
				]
			: move copy dump 2 (#4) to result (#5) and division:0 (#10)
				< #4
				[
				>+ #5
				>>>>>+ #10
				<<<<<<- #4
				]
				> #5
		: set division:1 (#11) to 10
			>>>>>> #11
			[-] 0
			+++++ +++++ 10
			<<<<<< #5
		: divide division:0 (#10) by division:1 (#11) and output to division:5 (#15)
			>>>>> #10
			[>[->+>+<<]>[-<<-[>]>>>[<[>>>-<<<[-]]>>]<<]>>>+<<[-<<+>>]<<<]
			<<<<< #5
		: move division:5 (#15) to tens place (#6)
			>>>>>>>>>> #15
			[
			<<<<<<<<<+ #6
			>>>>>>>>>- #15
			]
			<<<<<<<<<< #5
	: move result (#5) to ones place (#7)
		[
		>>+ #7
		<<- #5
		]
	: for tens place (#6) via copy dump 2 (#4) subtract 10 from ones place (#7) {ones place mod 10}
		: move tens place (#6) to copy dump 2 (#4)
			> #6
			[
			<<+ #4
			>>- #6
			]
			< #5
		: for copy dump 2 (#4) to tens place (#6) subtract 10 from ones place (#7)
			< #4
			[
			>>+ #6
			: subtract 10 from ones place (#7)
				> #7
				----- ----- \10
				< #6
			<<- #4
			]
			> #5
	: print tens place (#6) via print buffer (#2)
		> #6
		: move tens place (#6) to print buffer (#2)
			[
			<<<<+ #2
			>>>>- #6
			]
		<<<< #2
		: add 48 to print buffer (#2)
			+++++ +++++
			+++++ +++++
			+++++ +++++
			+++++ +++++
			+++++ +++ /48
		.[-]
		>>> #5
	: print ones place (#7) via print buffer (#2)
		>> #7
		: move ones place (#7) to print buffer (#2)
			[
			<<<<<+ #2
			>>>>>- #7
			]
		<<<<< #2
		: add 48 to print buffer (#2)
			+++++ +++++
			+++++ +++++
			+++++ +++++
			+++++ +++++
			+++++ +++ /48
		.[-]
		>>> #5
